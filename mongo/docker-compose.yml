version: '3.8'

networks:
  mongo-net:
    name: mongo-net

x-mongo-common: &mongo
  image: mongo:7.0.16
  restart: unless-stopped
  networks: [mongo-net]
  command: ["mongod", "--replSet", "rs0", "--bind_ip_all", "--keyFile", "/etc/mongo-keyfile", "--auth"]
  environment:
    MONGO_INITDB_ROOT_USERNAME: root
    MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
  volumes:
    - ./mongo-keyfile:/etc/mongo-keyfile:ro
  healthcheck:
    test: ["CMD-SHELL", "mongosh --quiet --port 27017 -u root -p ${MONGO_ROOT_PASSWORD} --authenticationDatabase admin --eval \"db.adminCommand({ ping: 1 }).ok\" | grep 1"]
    interval: 5s
    timeout: 15s
    start_period: 15s
    retries: 10

services:
  mongo-0:
    <<: *mongo
    container_name: mongo-0
    ports: ["27030:27017"]     # host:container

    volumes:
      - mongo-0:/data/db
      - ./mongo-keyfile:/etc/mongo-keyfile:ro

  mongo-1:
    <<: *mongo
    container_name: mongo-1
    ports: ["27031:27017"]

    volumes:
      - mongo-1:/data/db
      - ./mongo-keyfile:/etc/mongo-keyfile:ro

  mongo-2:
    <<: *mongo
    container_name: mongo-2
    ports: ["27032:27017"]

    volumes:
      - mongo-2:/data/db
      - ./mongo-keyfile:/etc/mongo-keyfile:ro

  # Optional: HAProxy on macOS (bridge network + published port)
  haproxy:
    image: haproxy:2.9
    container_name: haproxy-lb
    restart: unless-stopped
    networks: [mongo-net]
    depends_on: [mongo-0, mongo-1, mongo-2]
    ports: ["27034:27034"]
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro

volumes:
  mongo-0: {}
  mongo-1: {}
  mongo-2: {}

